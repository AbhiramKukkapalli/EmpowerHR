// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API.Models;

namespace Web_API.Migrations
{
    [DbContext(typeof(HRMContext))]
    [Migration("20221215204429_AddEMP_TO_DO_LIST")]
    partial class AddEMP_TO_DO_LIST
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_API.Models.Access", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("MenuA")
                        .HasColumnName("MENU_A")
                        .HasColumnType("int");

                    b.Property<int?>("MenuB")
                        .HasColumnName("MENU_B")
                        .HasColumnType("int");

                    b.Property<int?>("MenuC")
                        .HasColumnName("MENU_C")
                        .HasColumnType("int");

                    b.Property<int?>("MenuD")
                        .HasColumnName("MENU_D")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ACCESS");
                });

            modelBuilder.Entity("Web_API.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code")
                        .HasColumnName("CODE")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InTime")
                        .HasColumnName("IN_TIME")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OutTime")
                        .HasColumnName("OUT_TIME")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ATTENDANCE");
                });

            modelBuilder.Entity("Web_API.Models.BankName", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("B_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BName")
                        .HasColumnName("B_NAME")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("BId");

                    b.ToTable("BANK_NAME");
                });

            modelBuilder.Entity("Web_API.Models.BloodGroup", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("B_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodName")
                        .HasColumnName("BLOOD_NAME")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("BId");

                    b.ToTable("BLOOD_GROUP");
                });

            modelBuilder.Entity("Web_API.Models.Branch", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("B_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchName")
                        .HasColumnName("BRANCH_NAME")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("BId");

                    b.ToTable("BRANCH");
                });

            modelBuilder.Entity("Web_API.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepName")
                        .HasColumnName("DEP_NAME")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("Web_API.Models.EmpInfo", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BloodId")
                        .HasColumnName("BLOOD_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CreateEmpId")
                        .HasColumnName("CREATE_EMP_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EmpCreateDate")
                        .HasColumnName("EMP_CREATE_DATE")
                        .HasColumnType("date");

                    b.Property<string>("FristName")
                        .HasColumnName("FRIST_NAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Gender")
                        .HasColumnName("GENDER")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnName("LANGUAGE")
                        .HasColumnType("int");

                    b.Property<int?>("Mobile")
                        .HasColumnName("MOBILE")
                        .HasColumnType("int");

                    b.Property<string>("NameSurename")
                        .HasColumnName("NAME_SURENAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nic")
                        .HasColumnName("NIC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.HasKey("EmpId")
                        .HasName("PK_Table_1");

                    b.ToTable("EMP_INFO");
                });

            modelBuilder.Entity("Web_API.Models.EmpToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("END_DATE")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnName("NOTE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EMP_TO_DO_LIST");
                });

            modelBuilder.Entity("Web_API.Models.EmpWorkInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BId")
                        .HasColumnName("B_ID")
                        .HasColumnType("int");

                    b.Property<int?>("DId")
                        .HasColumnName("D_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DOfA")
                        .HasColumnName("D/OF_A")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DOfC")
                        .HasColumnName("D/OF_C")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DOfJoin")
                        .HasColumnName("D/OF_JOIN")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<string>("NfcNumber")
                        .HasColumnName("NFC_NUMBER")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PId")
                        .HasColumnName("P_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ReEmpId")
                        .HasColumnName("RE_EMP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("WTId")
                        .HasColumnName("W_T_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EMP_WORK_INFO");
                });

            modelBuilder.Entity("Web_API.Models.Gender", b =>
                {
                    b.Property<int>("GId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("G_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gender1")
                        .HasColumnName("GENDER")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("GId");

                    b.ToTable("GENDER");
                });

            modelBuilder.Entity("Web_API.Models.Language", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("L_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Language1")
                        .HasColumnName("LANGUAGE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("LId");

                    b.ToTable("LANGUAGE");
                });

            modelBuilder.Entity("Web_API.Models.LastUpdateT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("date");

                    b.Property<int?>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnName("QUANTITY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LAST_UPDATE_T");
                });

            modelBuilder.Entity("Web_API.Models.Notice", b =>
                {
                    b.Property<int>("NoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NO_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DId")
                        .HasColumnName("D_ID")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("From")
                        .HasColumnName("FROM")
                        .HasColumnType("date");

                    b.Property<string>("NBody")
                        .HasColumnName("N_BODY")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("NFromAll")
                        .HasColumnName("N_FROM_ALL")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NLUpdateDate")
                        .HasColumnName("N_L_UPDATE_DATE")
                        .HasColumnType("date");

                    b.Property<int?>("NPutId")
                        .HasColumnName("N_PUT_ID")
                        .HasColumnType("int");

                    b.Property<string>("NTitel")
                        .HasColumnName("N_TITEL")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PId")
                        .HasColumnName("P_ID")
                        .HasColumnType("int");

                    b.Property<int?>("PutPId")
                        .HasColumnName("PUT_P_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnName("TO_DATE")
                        .HasColumnType("date");

                    b.HasKey("NoId");

                    b.HasIndex("PutPId");

                    b.ToTable("NOTICE");
                });

            modelBuilder.Entity("Web_API.Models.Pass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatDate")
                        .HasColumnName("CREAT_DATE")
                        .HasColumnType("date");

                    b.Property<int?>("CreatEmpId")
                        .HasColumnName("CREAT_EMP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLDateTime")
                        .HasColumnName("LAST_L_DATE_TIME")
                        .HasColumnType("datetime");

                    b.Property<int?>("Lock1")
                        .HasColumnName("LOCK1")
                        .HasColumnType("int");

                    b.Property<int?>("Lock2")
                        .HasColumnName("LOCK2")
                        .HasColumnType("int");

                    b.Property<int?>("LogInOut")
                        .HasColumnName("LOG_IN_OUT")
                        .HasColumnType("int");

                    b.Property<string>("Pass1")
                        .HasColumnName("PASS")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Path")
                        .HasColumnName("Path")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .HasColumnName("USER_NAME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PASS");
                });

            modelBuilder.Entity("Web_API.Models.Position", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("P_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DId")
                        .HasColumnName("D_ID")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnName("POSITION_NAME")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PId");

                    b.ToTable("POSITION");
                });

            modelBuilder.Entity("Web_API.Models.SaleTShirt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BId")
                        .HasColumnName("B_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("date");

                    b.Property<int?>("EmpId")
                        .HasColumnName("EMP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("OderId")
                        .HasColumnName("ODER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnName("QUANTITY")
                        .HasColumnType("int");

                    b.Property<string>("ResiptNo")
                        .HasColumnName("RESIPT_NO")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("States")
                        .HasColumnName("STATES")
                        .HasColumnType("int");

                    b.Property<int?>("TSNId")
                        .HasColumnName("T_S_N_ID")
                        .HasColumnType("int");

                    b.Property<int?>("TSSizeId")
                        .HasColumnName("T_S_SIZE_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SALE_T_SHIRT");
                });

            modelBuilder.Entity("Web_API.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status1")
                        .HasColumnName("STATUS")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("STATUS");
                });

            modelBuilder.Entity("Web_API.Models.TShirtName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Price")
                        .HasColumnName("PRICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TName")
                        .HasColumnName("T_NAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("T_SHIRT_NAME");
                });

            modelBuilder.Entity("Web_API.Models.TShirtSize", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SIZE_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Length")
                        .HasColumnName("LENGTH")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("SizeName")
                        .HasColumnName("SIZE_NAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Width")
                        .HasColumnName("WIDTH")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("SizeId")
                        .HasName("PK_T_SHART_SIZE");

                    b.ToTable("T_SHIRT_SIZE");
                });

            modelBuilder.Entity("Web_API.Models.TShirtStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TSNId")
                        .HasColumnName("T_S_N_ID")
                        .HasColumnType("int");

                    b.Property<int?>("TSSizeId")
                        .HasColumnName("T_S_SIZE_ID")
                        .HasColumnType("int");

                    b.Property<int?>("TStockQuantity")
                        .HasColumnName("T_STOCK_QUANTITY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("T_SHIRT_STOCK");
                });

            modelBuilder.Entity("Web_API.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnName("OUT_DATE")
                        .HasColumnType("date");

                    b.Property<string>("Search")
                        .HasColumnName("SEARCH")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Search2")
                        .HasColumnName("SEARCH_2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Test1")
                        .HasColumnName("TEST")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TEST");
                });

            modelBuilder.Entity("Web_API.Models.Test2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Test")
                        .HasColumnName("TEST")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TEST_2");
                });

            modelBuilder.Entity("Web_API.Models.ToDoListStates", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ToListProccess")
                        .IsRequired()
                        .HasColumnName("TO_LIST_Proccess")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TO_DO_LIST_STATES");
                });

            modelBuilder.Entity("Web_API.Models.WorkType", b =>
                {
                    b.Property<int>("WId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("W_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WName")
                        .IsRequired()
                        .HasColumnName("W_NAME")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("WId");

                    b.ToTable("WORK_TYPE");
                });

            modelBuilder.Entity("Web_API.Models.Notice", b =>
                {
                    b.HasOne("Web_API.Models.Position", "PutP")
                        .WithMany("Notice")
                        .HasForeignKey("PutPId")
                        .HasConstraintName("FK_NOTICE_POSITION");
                });
#pragma warning restore 612, 618
        }
    }
}
